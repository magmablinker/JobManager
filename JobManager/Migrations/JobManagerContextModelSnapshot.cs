// <auto-generated />
using System;
using JobManager.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JobManager.Migrations
{
    [DbContext(typeof(JobManagerContext))]
    partial class JobManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("JobManager.Core.Data.Model.DbCategory", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("category");
                });

            modelBuilder.Entity("JobManager.Core.Data.Model.DbJobOffer", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<byte[]>("EmployerId")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<float>("PayPerHour")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EmployerId");

                    b.ToTable("jobOffer");
                });

            modelBuilder.Entity("JobManager.Core.Data.Model.DbJobOfferCategory", b =>
                {
                    b.Property<byte[]>("CategoryId")
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("JobOfferId")
                        .HasColumnType("varbinary(16)");

                    b.HasKey("CategoryId", "JobOfferId");

                    b.HasIndex("JobOfferId");

                    b.ToTable("DbJobOfferCategories");
                });

            modelBuilder.Entity("JobManager.Core.Data.Model.DbUser", b =>
                {
                    b.Property<byte[]>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("varchar(16)")
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("JobManager.Core.Data.Model.DbJobOffer", b =>
                {
                    b.HasOne("JobManager.Core.Data.Model.DbUser", "Employer")
                        .WithMany()
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JobManager.Core.Data.Model.DbJobOfferCategory", b =>
                {
                    b.HasOne("JobManager.Core.Data.Model.DbCategory", "Category")
                        .WithMany("JobOfferCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobManager.Core.Data.Model.DbJobOffer", "JobOffer")
                        .WithMany("JobOfferCategories")
                        .HasForeignKey("JobOfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
